name: Build and deploy

on:
  push:
    branches:
      - main

jobs:
  backend-ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Backend Build and Run
        run: |
          cd backend 
          docker compose build --pull
          docker compose up -d --build
        env:
          POSTGRES_PASSWORD: postgres

      - name: Containers healthcheck
        run: docker ps

      - name: Stop-n-clean
        run: |
          cd backend
          docker compose down

  frontend-ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: pnpm setup
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false
          package_json_file: './frontend/package.json'

      - name: Node.js setup
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
          cache-dependency-path: './frontend/pnpm-lock.yaml'

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: '~/.pnpm-store'
          key: "pnpm-${{ runner.os }}-${{ hashFiles('frontend/pnpm-lock.yaml') }}"
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts
        working-directory: frontend

      - name: Build
        run: pnpm run build
        working-directory: frontend

  deploy:
    needs: [backend-ci, frontend-ci]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Code retrieval
        uses: actions/checkout@v4

      - name: Install dependencies for build scripts
        run: sudo apt-get update && sudo apt-get install -y sed coreutils

      - name: Deploy backend via Appleboy SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE }}
          script: |
            cd ${{ secrets.BACKEND_PATH }}
            docker compose down
            git pull
            docker compose build --pull
            docker compose up -d

      - name: Deploy frontend via Appleboy SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE }}
          script: |
            cd ${{ secrets.FRONTEND_PATH }}
            git pull
            export PATH=$PATH:/root/.local/share/pnpm/
            pnpm install
            pnpm build
            pm2 delete frontend 2> /dev/null || true
            pm2 start pnpm --name frontend -- start