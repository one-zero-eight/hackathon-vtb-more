import { useParams, useNavigate } from '@tanstack/react-router';
import {
  ArrowLeft,
  MessageCircle,
  TrendingUp,
  Star,
  Target,
  Users,
  Heart,
} from 'lucide-react';
import { Button } from '@/components/ui/button';
import { mockVacancies } from '@/data/mockVacancies';

export const VacancyReport = () => {
  const { id } = useParams({ from: '/user/vacancy/$id/report' });
  const navigate = useNavigate();

  const vacancy = mockVacancies.find(v => v.id === parseInt(id));

  // Mock data for the report
  const reportData = {
    status: 'accepted', // 'accepted' or 'rejected'
    hrMessage: `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å –∫ –ø–æ–∑–∏—Ü–∏–∏ "${vacancy?.title}" –∏ –∑–∞ –≤—Ä–µ–º—è, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —É–¥–µ–ª–∏–ª–∏ –Ω–∞—à–µ–º—É –ø—Ä–æ—Ü–µ—Å—Å—É –æ—Ç–±–æ—Ä–∞.

–ú—ã –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏–ª–∏ –≤–∞—à–µ —Ä–µ–∑—é–º–µ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞—É–¥–∏–æ-–∏–Ω—Ç–µ—Ä–≤—å—é. –•–æ—Ç—è –≤–∞—à–∏ –Ω–∞–≤—ã–∫–∏ –∏ –æ–ø—ã—Ç –≤–ø–µ—á–∞—Ç–ª—è—é—Ç, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º—ã –Ω–µ –º–æ–∂–µ–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º —ç—Ç—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–æ–∑–∏—Ü–∏—é.

–≠—Ç–æ –Ω–µ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤—ã –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏. –í–æ–∑–º–æ–∂–Ω–æ, –≤ –±—É–¥—É—â–µ–º —É –Ω–∞—Å –ø–æ—è–≤—è—Ç—Å—è –±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –ª—É—á—à–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –≤–∞—à–µ–º—É –ø—Ä–æ—Ñ–∏–ª—é.

–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å –∫ TechCorp –∏ –∂–µ–ª–∞–µ–º –≤–∞–º —É—Å–ø–µ—Ö–æ–≤ –≤ –ø–æ–∏—Å–∫–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –ø–æ–∑–∏—Ü–∏–∏!`,

    skillsFeedback: [
      {
        skill: 'Python',
        currentLevel: 'Good',
        growthAreas: [
          '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å –Ω–∞–≤—ã–∫–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã',
          '–ò–∑—É—á–∏—Ç–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è CI/CD',
          '–£–≥–ª—É–±–∏—Ç–µ –∑–Ω–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏–∏ (Docker, Kubernetes)',
          '–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ—Å—å –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö unit-—Ç–µ—Å—Ç–æ–≤',
        ],
        resources: [
          '–ö–Ω–∏–≥–∞ "Building Microservices" by Sam Newman',
          '–ö—É—Ä—Å "Docker for Developers" –Ω–∞ Udemy',
          '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è Kubernetes',
        ],
      },
      {
        skill: 'SQL',
        currentLevel: 'Intermediate',
        growthAreas: [
          '–ò–∑—É—á–∏—Ç–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤',
          '–û—Å–≤–æ–π—Ç–µ —Ä–∞–±–æ—Ç—É —Å NoSQL –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö',
          '–ò–∑—É—á–∏—Ç–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö',
          '–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ—Å—å –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ —Å–ª–æ–∂–Ω—ã—Ö –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤',
        ],
      },
      {
        skill: '–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è',
        currentLevel: 'Good',
        growthAreas: [
          '–†–∞–∑–≤–∏–≤–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π',
          '–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ—Å—å –≤ –æ–±—ä—è—Å–Ω–µ–Ω–∏–∏ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–Ω—Ü–µ–ø—Ü–∏–π –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º',
          '–ò–∑—É—á–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ª—É—à–∞–Ω–∏—è',
          '–†–∞–∑–≤–∏–≤–∞–π—Ç–µ —ç–º–ø–∞—Ç–∏—é –≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–∞–±–æ—Ç–µ',
        ],
      },
    ],

    nextSteps: [
      '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏',
      '–ò–∑—É—á–∞–π—Ç–µ –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤ –≤–∞—à–µ–π –æ–±–ª–∞—Å—Ç–∏',
      '–£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ open-source –ø—Ä–æ–µ–∫—Ç–∞—Ö',
      '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –Ω–æ–≤—ã–º–∏ –≤–∞–∫–∞–Ω—Å–∏—è–º–∏',
    ],
  };

  if (!vacancy) {
    return (
      <div className="container-w mx-auto py-16 text-center">
        <div className="text-6xl mb-4">üòï</div>
        <h1 className="text-3xl font-bold text-gray-900 dark:text-gray-100 mb-4">
          –í–∞–∫–∞–Ω—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
        </h1>
        <Button
          onClick={() => navigate({ to: '/user/vacancies' })}
          className="bg-primary hover:bg-primary/90"
        >
          –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –≤–∞–∫–∞–Ω—Å–∏–π
        </Button>
      </div>
    );
  }

  return (
    <div className="container-w mx-auto py-4 md:py-8 px-4">
      {/* Header with back button */}
      <div className="mb-6 md:mb-8">
        <Button
          variant="ghost"
          onClick={() => navigate({ to: `/user/vacancy/${id}` })}
          className="flex items-center gap-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 p-2 md:p-3"
        >
          <ArrowLeft className="w-4 h-4 md:w-5 md:h-5" />
          <span className="text-sm md:text-base">–ù–∞–∑–∞–¥ –∫ –≤–∞–∫–∞–Ω—Å–∏–∏</span>
        </Button>
      </div>

      {/* Status Banner - Gentle rejection */}
      <div className="mb-8 p-6 rounded-2xl border-2 bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-700">
        <div className="flex  gap-4">
          <Heart className="w-12 h-12 text-blue-600 dark:text-blue-400" />
          <div className="flex flex-col">
            <h1 className="text-2xl md:text-3xl font-bold text-gray-900 dark:text-gray-100 mb-2">
              –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É!
            </h1>
            <p className="text-gray-600 dark:text-gray-400 text-lg">
              –ú—ã —Ü–µ–Ω–∏–º –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å –∫ –ø–æ–∑–∏—Ü–∏–∏ "{vacancy.title}"
            </p>
            {/* Prominent status indicator */}
            <div className="mt-4">
              <span
                className={`inline-flex items-center px-4 py-2 rounded-xl text-base font-semibold shadow-lg ${
                  reportData.status === 'accepted'
                    ? 'bg-green-500 text-white border-2 border-green-400'
                    : 'bg-blue-500 text-white border-2 border-blue-400'
                }`}
              >
                {reportData.status === 'accepted'
                  ? 'üéâ –ü–†–ò–ù–Ø–¢ –ù–ê –†–ê–ë–û–¢–£!'
                  : 'üìã –ó–ê–Ø–í–ö–ê –†–ê–°–°–ú–û–¢–†–ï–ù–ê'}
              </span>
            </div>
          </div>
        </div>
      </div>

      {/* HR Message */}
      <div className="mb-8">
        <div className="flex items-center gap-3 mb-4">
          <MessageCircle className="w-6 h-6 text-primary" />
          <h2 className="text-xl md:text-2xl font-bold text-gray-900 dark:text-gray-100">
            –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç HR
          </h2>
        </div>
        <div className="bg-white dark:bg-slate-900/40 rounded-2xl p-6 shadow-lg border border-gray-100 dark:border-slate-600/30 backdrop-blur-sm">
          <div className="prose prose-gray dark:prose-invert max-w-none">
            <p className="text-gray-700 dark:text-gray-300 text-sm md:text-base leading-relaxed whitespace-pre-line">
              {reportData.hrMessage}
            </p>
          </div>
        </div>
      </div>

      {/* Skills Growth Section */}
      <div className="mb-8">
        <div className="flex items-center gap-3 mb-6">
          <TrendingUp className="w-6 h-6 text-primary" />
          <h2 className="text-xl md:text-2xl font-bold text-gray-900 dark:text-gray-100">
            –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –Ω–∞–≤—ã–∫–æ–≤
          </h2>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {reportData.skillsFeedback.map((skill, index) => (
            <div
              key={index}
              className="bg-white dark:bg-slate-900/40 rounded-2xl p-6 shadow-lg border border-gray-100 dark:border-slate-600/30 backdrop-blur-sm"
            >
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-lg md:text-xl font-semibold text-gray-900 dark:text-gray-100">
                  {skill.skill}
                </h3>
                <div className="flex items-center gap-2">
                  <Star className="w-4 h-4 text-yellow-500" />
                  <span className="text-sm text-gray-600 dark:text-gray-400">
                    {skill.currentLevel}
                  </span>
                </div>
              </div>

              <div className="mb-4">
                <h4 className="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center gap-2">
                  <Target className="w-4 h-4 text-primary" />
                  –û–±–ª–∞—Å—Ç–∏ –¥–ª—è —Ä–æ—Å—Ç–∞:
                </h4>
                <ul className="space-y-2">
                  {skill.growthAreas.map((area, areaIndex) => (
                    <li
                      key={areaIndex}
                      className="flex items-start gap-2 text-sm text-gray-600 dark:text-gray-400"
                    >
                      <div className="w-1.5 h-1.5 bg-primary rounded-full mt-2 flex-shrink-0" />
                      {area}
                    </li>
                  ))}
                </ul>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Next Steps */}
      <div className="mb-8">
        <div className="flex items-center gap-3 mb-6">
          <Users className="w-6 h-6 text-primary" />
          <h2 className="text-xl md:text-2xl font-bold text-gray-900 dark:text-gray-100">
            –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è
          </h2>
        </div>

        <div className="bg-white dark:bg-slate-900/40 rounded-2xl p-6 shadow-lg border border-gray-100 dark:border-slate-600/30 backdrop-blur-sm">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            {reportData.nextSteps.map((step, index) => (
              <div
                key={index}
                className="flex items-center gap-3 p-3 bg-gray-50 dark:bg-slate-800/50 rounded-xl"
              >
                <div className="w-6 h-6 bg-primary rounded-full flex items-center justify-center dark:text-black text-white text-sm font-bold">
                  {index + 1}
                </div>
                <span className="text-gray-700 dark:text-gray-300 text-sm md:text-base">
                  {step}
                </span>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* Action Buttons */}
      <div className="flex flex-col sm:flex-row gap-4 justify-center">
        <Button
          onClick={() => navigate({ to: `/user/vacancy/${id}` })}
          variant="outline"
          className="px-8 py-3"
        >
          –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤–∞–∫–∞–Ω—Å–∏–∏
        </Button>
        <Button
          onClick={() => navigate({ to: '/user/vacancies' })}
          className="px-8 py-3 bg-primary hover:bg-primary/90"
        >
          –ö —Å–ø–∏—Å–∫—É –≤–∞–∫–∞–Ω—Å–∏–π
        </Button>
      </div>
    </div>
  );
};
