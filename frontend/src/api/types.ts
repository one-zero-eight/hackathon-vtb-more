/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/applications': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** List Applications */
    get: operations['list_applications_applications_get'];
    put?: never;
    /** Create Application */
    post: operations['create_application_applications_post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/applications/{application_id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Application */
    get: operations['get_application_applications__application_id__get'];
    put?: never;
    post?: never;
    /** Delete Application */
    delete: operations['delete_application_applications__application_id__delete'];
    options?: never;
    head?: never;
    /** Edit Application Endpoint */
    patch: operations['edit_application_endpoint_applications__application_id__patch'];
    trace?: never;
  };
  '/auth/register': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Register */
    post: operations['register_auth_register_post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/auth/token': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Login */
    post: operations['login_auth_token_post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/auth/me': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Read Me */
    get: operations['read_me_auth_me_get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/skills': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create Skill */
    post: operations['create_skill_skills_post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/skills/{skill_id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Skill */
    get: operations['get_skill_skills__skill_id__get'];
    put?: never;
    post?: never;
    /** Delete Skill */
    delete: operations['delete_skill_skills__skill_id__delete'];
    options?: never;
    head?: never;
    /** Edit Skill */
    patch: operations['edit_skill_skills__skill_id__patch'];
    trace?: never;
  };
  '/skills_type': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create Skill Type */
    post: operations['create_skill_type_skills_type_post'];
    delete?: never;
    options?: never;
    head?: never;
    /** Edit Skill Type */
    patch: operations['edit_skill_type_skills_type_patch'];
    trace?: never;
  };
  '/skills_type/{skill_id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Skill Type */
    get: operations['get_skill_type_skills_type__skill_id__get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/skills_type/{skill_type_id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Skill Type */
    delete: operations['delete_skill_type_skills_type__skill_type_id__delete'];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/vacancy': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create Vacancy */
    post: operations['create_vacancy_vacancy_post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/vacancy/{vacancy_id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Vacancy */
    get: operations['get_vacancy_vacancy__vacancy_id__get'];
    put?: never;
    post?: never;
    /** Delete Vacancy */
    delete: operations['delete_vacancy_vacancy__vacancy_id__delete'];
    options?: never;
    head?: never;
    /** Edit Vacancy */
    patch: operations['edit_vacancy_vacancy__vacancy_id__patch'];
    trace?: never;
  };
  '/users': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** List Users */
    get: operations['list_users_users_get'];
    put?: never;
    /** Register */
    post: operations['register_users_post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/users/{user_id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get User Endpoint */
    get: operations['get_user_endpoint_users__user_id__get'];
    put?: never;
    post?: never;
    /** Delete User Endpoint */
    delete: operations['delete_user_endpoint_users__user_id__delete'];
    options?: never;
    head?: never;
    /** Edit User Endpoint */
    patch: operations['edit_user_endpoint_users__user_id__patch'];
    trace?: never;
  };
  '/preinterview/create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create Preinterview */
    post: operations['create_preinterview_preinterview_create_post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/preinterview/{result_id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Preinterview */
    get: operations['get_preinterview_preinterview__result_id__get'];
    put?: never;
    post?: never;
    /** Delete Preinterview */
    delete: operations['delete_preinterview_preinterview__result_id__delete'];
    options?: never;
    head?: never;
    /** Edit Preinterview */
    patch: operations['edit_preinterview_preinterview__result_id__patch'];
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    /** ApplicationResponse */
    ApplicationResponse: {
      /** Id */
      id: number;
      /** Cv */
      cv: string;
      /** Status */
      status: string;
      /** User Id */
      user_id: number;
      /** Vacancy Id */
      vacancy_id: number;
    };
    /** Body_create_application_applications_post */
    Body_create_application_applications_post: {
      /**
       * File
       * Format: binary
       */
      file: string;
      /** Vacancy Id */
      vacancy_id: number;
    };
    /** Body_edit_application_endpoint_applications__application_id__patch */
    Body_edit_application_endpoint_applications__application_id__patch: {
      /** File */
      file?: string | null;
      status?: components['schemas']['Status'] | null;
      /** User Id */
      user_id?: number | null;
      /** Vacancy Id */
      vacancy_id?: number | null;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components['schemas']['ValidationError'][];
    };
    /** LoginRequest */
    LoginRequest: {
      /**
       * Email
       * Format: email
       */
      email: string;
      /** Password */
      password: string;
    };
    /** PreInterviewResponse */
    PreInterviewResponse: {
      /** Id */
      id: number;
      /** Is Recommended */
      is_recommended: boolean;
      /** Score */
      score: number;
      /** Reason */
      reason: string | null;
      /** Application Id */
      application_id: number;
    };
    /** RegisterRequest */
    RegisterRequest: {
      /** Name */
      name: string;
      /**
       * Email
       * Format: email
       */
      email: string;
      /** Password */
      password: string;
      /**
       * Is Admin
       * @default false
       */
      is_admin: boolean;
    };
    /** SkillTypeCreateRequest */
    SkillTypeCreateRequest: {
      /** Name */
      name: string;
    };
    /** SkillTypeResponse */
    SkillTypeResponse: {
      /** Id */
      id: number;
      /** Name */
      name: string;
    };
    /** SkillTypeUpdateRequest */
    SkillTypeUpdateRequest: {
      /** Id */
      id?: number | null;
      /** Name */
      name?: string | null;
    };
    /** SkillsResponse */
    SkillsResponse: {
      /** Id */
      id: number;
      /** Weight */
      weight: number;
      /** Details */
      details: string;
      /** Skill Type Id */
      skill_type_id: number;
      /** Vacancy Id */
      vacancy_id: number;
    };
    /**
     * Status
     * @enum {string}
     */
    Status:
      | 'approved'
      | 'rejected'
      | 'approved_for_interview'
      | 'rejected_for_interview'
      | 'in_interview';
    /** TokenResponse */
    TokenResponse: {
      /** Access Token */
      access_token: string;
      /**
       * Token Type
       * @default bearer
       */
      token_type: string;
    };
    /** UserCreate */
    UserCreate: {
      /** Name */
      name: string;
      /** Email */
      email: string;
      /** Password */
      password: string;
      /**
       * Is Admin
       * @default false
       */
      is_admin: boolean;
    };
    /** UserResponse */
    UserResponse: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Email */
      email: string;
      /** Is Admin */
      is_admin: boolean;
    };
    /** VacancyCreateRequest */
    VacancyCreateRequest: {
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Salary */
      salary?: number | null;
      /** City */
      city: string;
      /** Weekly Hours Occupancy */
      weekly_hours_occupancy: number;
      /** Required Experience */
      required_experience: number;
      /**
       * Open Time
       * Format: date-time
       * @default 2025-09-05T20:42:22.298347Z
       */
      open_time: string;
      /** Close Time */
      close_time?: string | null;
      /**
       * Is Active
       * @default true
       */
      is_active: boolean;
    };
    /** VacancyEditRequest */
    VacancyEditRequest: {
      /** Name */
      name?: string | null;
      /** Description */
      description?: string | null;
      /** Salary */
      salary?: number | null;
      /** City */
      city?: string | null;
      /** Weekly Hours Occupancy */
      weekly_hours_occupancy?: number | null;
      /** Required Experience */
      required_experience?: number | null;
      /** Open Time */
      open_time?: string | null;
      /** Close Time */
      close_time?: string | null;
      /** Is Active */
      is_active?: boolean | null;
      /** User Id */
      user_id?: number | null;
    };
    /** VacancyResponse */
    VacancyResponse: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Salary */
      salary: number | null;
      /** City */
      city: string;
      /** Weekly Hours Occupancy */
      weekly_hours_occupancy: number;
      /** Required Experience */
      required_experience: number;
      /**
       * Open Time
       * Format: date-time
       */
      open_time: string;
      /** Close Time */
      close_time: string | null;
      /** Is Active */
      is_active: boolean;
      /** User Id */
      user_id: number;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  list_applications_applications_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ApplicationResponse'][];
        };
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  create_application_applications_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'multipart/form-data': components['schemas']['Body_create_application_applications_post'];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ApplicationResponse'];
        };
      };
      /** @description Invalid token OR Invalid auth scheme */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_application_applications__application_id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        application_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ApplicationResponse'];
        };
      };
      /** @description Invalid token OR Invalid auth scheme */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description You are not authorized to view this application */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description No such application */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  delete_application_applications__application_id__delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        application_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description No such application */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  edit_application_endpoint_applications__application_id__patch: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        application_id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        'multipart/form-data': components['schemas']['Body_edit_application_endpoint_applications__application_id__patch'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ApplicationResponse'];
        };
      };
      /** @description No changes provided */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Invalid token OR Invalid auth scheme */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description You are not authorized to transfer this application OR You are not authorized to change this application OR You are not authorized to change status of application */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description No such application */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  register_auth_register_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['RegisterRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['TokenResponse'];
        };
      };
      /** @description Email already in use */
      409: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  login_auth_token_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['LoginRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['TokenResponse'];
        };
      };
      /** @description Invalid credentials */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  read_me_auth_me_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['UserResponse'];
        };
      };
      /** @description Invalid token OR Invalid auth scheme */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  create_skill_skills_post: {
    parameters: {
      query: {
        weight: number;
        details: string;
        skill_type_id: number;
        vacancy_id: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['SkillsResponse'];
        };
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_skill_skills__skill_id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        skill_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['SkillsResponse'];
        };
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description No such skill */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  delete_skill_skills__skill_id__delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        skill_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Invalid skill_id */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  edit_skill_skills__skill_id__patch: {
    parameters: {
      query?: {
        weight?: number | null;
        details?: string | null;
        skill_type_id?: number | null;
        vacancy_id?: number | null;
      };
      header?: never;
      path: {
        skill_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['SkillsResponse'];
        };
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Invalid skill_id */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  create_skill_type_skills_type_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['SkillTypeCreateRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['SkillTypeResponse'];
        };
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  edit_skill_type_skills_type_patch: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['SkillTypeUpdateRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['SkillTypeResponse'];
        };
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Invalid skill_type_id */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_skill_type_skills_type__skill_id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        skill_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['SkillsResponse'];
        };
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description No such skill type */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  delete_skill_type_skills_type__skill_type_id__delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        skill_type_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Invalid skill_type_id */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  create_vacancy_vacancy_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['VacancyCreateRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['VacancyResponse'];
        };
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_vacancy_vacancy__vacancy_id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        vacancy_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['VacancyResponse'];
        };
      };
      /** @description Invalid token OR Invalid auth scheme */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Vacancy not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  delete_vacancy_vacancy__vacancy_id__delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        vacancy_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Vacancy not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  edit_vacancy_vacancy__vacancy_id__patch: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        vacancy_id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['VacancyEditRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['VacancyResponse'];
        };
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Vacancy not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  list_users_users_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['UserResponse'][];
        };
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  register_users_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['RegisterRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['UserResponse'];
        };
      };
      /** @description Email already in use */
      409: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_user_endpoint_users__user_id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        user_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['UserResponse'];
        };
      };
      /** @description Invalid token OR Invalid auth scheme */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description No such user */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  delete_user_endpoint_users__user_id__delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        user_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description No such user */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  edit_user_endpoint_users__user_id__patch: {
    parameters: {
      query?: {
        name?: string | null;
        email?: string | null;
        password?: string | null;
        is_admin?: boolean | null;
      };
      header?: never;
      path: {
        user_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['UserResponse'];
        };
      };
      /** @description No changes provided */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Invalid token OR Invalid auth scheme */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Only admins can change admin flag OR Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description No such user */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  create_preinterview_preinterview_create_post: {
    parameters: {
      query: {
        is_recommended: boolean;
        score: number;
        application_id: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['PreInterviewResponse'];
        };
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_preinterview_preinterview__result_id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        result_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['PreInterviewResponse'];
        };
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Invalid result_id */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  delete_preinterview_preinterview__result_id__delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        result_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Invalid result_id */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  edit_preinterview_preinterview__result_id__patch: {
    parameters: {
      query?: {
        is_recommended?: boolean | null;
        score?: number | null;
        application_id?: number | null;
      };
      header?: never;
      path: {
        result_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['PreInterviewResponse'];
        };
      };
      /** @description Admin only */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Invalid result_id */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
}
