/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as UserVacanciesIndexRouteImport } from './routes/user/vacancies/index'
import { Route as UserVacancyIdRouteImport } from './routes/user/vacancy/$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const UserVacanciesIndexRoute = UserVacanciesIndexRouteImport.update({
  id: '/user/vacancies/',
  path: '/user/vacancies/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserVacancyIdRoute = UserVacancyIdRouteImport.update({
  id: '/user/vacancy/$id',
  path: '/user/vacancy/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/auth': typeof AuthIndexRoute
  '/user/vacancy/$id': typeof UserVacancyIdRoute
  '/user/vacancies': typeof UserVacanciesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/auth': typeof AuthIndexRoute
  '/user/vacancy/$id': typeof UserVacancyIdRoute
  '/user/vacancies': typeof UserVacanciesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/auth/': typeof AuthIndexRoute
  '/user/vacancy/$id': typeof UserVacancyIdRoute
  '/user/vacancies/': typeof UserVacanciesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/demo/tanstack-query'
    | '/auth'
    | '/user/vacancy/$id'
    | '/user/vacancies'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/demo/tanstack-query'
    | '/auth'
    | '/user/vacancy/$id'
    | '/user/vacancies'
  id:
    | '__root__'
    | '/'
    | '/demo/tanstack-query'
    | '/auth/'
    | '/user/vacancy/$id'
    | '/user/vacancies/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  AuthIndexRoute: typeof AuthIndexRoute
  UserVacancyIdRoute: typeof UserVacancyIdRoute
  UserVacanciesIndexRoute: typeof UserVacanciesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/vacancies/': {
      id: '/user/vacancies/'
      path: '/user/vacancies'
      fullPath: '/user/vacancies'
      preLoaderRoute: typeof UserVacanciesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/vacancy/$id': {
      id: '/user/vacancy/$id'
      path: '/user/vacancy/$id'
      fullPath: '/user/vacancy/$id'
      preLoaderRoute: typeof UserVacancyIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  AuthIndexRoute: AuthIndexRoute,
  UserVacancyIdRoute: UserVacancyIdRoute,
  UserVacanciesIndexRoute: UserVacanciesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
