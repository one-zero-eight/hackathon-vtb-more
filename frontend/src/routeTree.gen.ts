/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as InterviewApplicationIdRouteImport } from './routes/interview/$applicationId'
import { Route as UserVacanciesIndexRouteImport } from './routes/user/vacancies/index'
import { Route as UserProfileIndexRouteImport } from './routes/user/profile/index'
import { Route as HrVacanciesIndexRouteImport } from './routes/hr/vacancies/index'
import { Route as HrVacanciesCreateRouteImport } from './routes/hr/vacancies/create'
import { Route as HrVacanciesArchieveRouteImport } from './routes/hr/vacancies/archieve'
import { Route as UserVacancyIdIndexRouteImport } from './routes/user/vacancy/$id/index'
import { Route as HrVacanciesIdIndexRouteImport } from './routes/hr/vacancies/$id/index'
import { Route as UserVacancyIdReportRouteImport } from './routes/user/vacancy/$id/report'
import { Route as HrVacanciesIdUpdateRouteImport } from './routes/hr/vacancies/$id/update'
import { Route as HrVacanciesIdApplicantsRouteImport } from './routes/hr/vacancies/$id/applicants'
import { Route as UserVacancyIdIdIndexRouteImport } from './routes/user/vacancy/$id/$id/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const InterviewApplicationIdRoute = InterviewApplicationIdRouteImport.update({
  id: '/interview/$applicationId',
  path: '/interview/$applicationId',
  getParentRoute: () => rootRouteImport,
} as any)
const UserVacanciesIndexRoute = UserVacanciesIndexRouteImport.update({
  id: '/user/vacancies/',
  path: '/user/vacancies/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserProfileIndexRoute = UserProfileIndexRouteImport.update({
  id: '/user/profile/',
  path: '/user/profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const HrVacanciesIndexRoute = HrVacanciesIndexRouteImport.update({
  id: '/hr/vacancies/',
  path: '/hr/vacancies/',
  getParentRoute: () => rootRouteImport,
} as any)
const HrVacanciesCreateRoute = HrVacanciesCreateRouteImport.update({
  id: '/hr/vacancies/create',
  path: '/hr/vacancies/create',
  getParentRoute: () => rootRouteImport,
} as any)
const HrVacanciesArchieveRoute = HrVacanciesArchieveRouteImport.update({
  id: '/hr/vacancies/archieve',
  path: '/hr/vacancies/archieve',
  getParentRoute: () => rootRouteImport,
} as any)
const UserVacancyIdIndexRoute = UserVacancyIdIndexRouteImport.update({
  id: '/user/vacancy/$id/',
  path: '/user/vacancy/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const HrVacanciesIdIndexRoute = HrVacanciesIdIndexRouteImport.update({
  id: '/hr/vacancies/$id/',
  path: '/hr/vacancies/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserVacancyIdReportRoute = UserVacancyIdReportRouteImport.update({
  id: '/user/vacancy/$id/report',
  path: '/user/vacancy/$id/report',
  getParentRoute: () => rootRouteImport,
} as any)
const HrVacanciesIdUpdateRoute = HrVacanciesIdUpdateRouteImport.update({
  id: '/hr/vacancies/$id/update',
  path: '/hr/vacancies/$id/update',
  getParentRoute: () => rootRouteImport,
} as any)
const HrVacanciesIdApplicantsRoute = HrVacanciesIdApplicantsRouteImport.update({
  id: '/hr/vacancies/$id/applicants',
  path: '/hr/vacancies/$id/applicants',
  getParentRoute: () => rootRouteImport,
} as any)
const UserVacancyIdIdIndexRoute = UserVacancyIdIdIndexRouteImport.update({
  id: '/user/vacancy/$id/$id/',
  path: '/user/vacancy/$id/$id/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/interview/$applicationId': typeof InterviewApplicationIdRoute
  '/auth': typeof AuthIndexRoute
  '/hr/vacancies/archieve': typeof HrVacanciesArchieveRoute
  '/hr/vacancies/create': typeof HrVacanciesCreateRoute
  '/hr/vacancies': typeof HrVacanciesIndexRoute
  '/user/profile': typeof UserProfileIndexRoute
  '/user/vacancies': typeof UserVacanciesIndexRoute
  '/hr/vacancies/$id/applicants': typeof HrVacanciesIdApplicantsRoute
  '/hr/vacancies/$id/update': typeof HrVacanciesIdUpdateRoute
  '/user/vacancy/$id/report': typeof UserVacancyIdReportRoute
  '/hr/vacancies/$id': typeof HrVacanciesIdIndexRoute
  '/user/vacancy/$id': typeof UserVacancyIdIndexRoute
  '/user/vacancy/$id/$id': typeof UserVacancyIdIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/interview/$applicationId': typeof InterviewApplicationIdRoute
  '/auth': typeof AuthIndexRoute
  '/hr/vacancies/archieve': typeof HrVacanciesArchieveRoute
  '/hr/vacancies/create': typeof HrVacanciesCreateRoute
  '/hr/vacancies': typeof HrVacanciesIndexRoute
  '/user/profile': typeof UserProfileIndexRoute
  '/user/vacancies': typeof UserVacanciesIndexRoute
  '/hr/vacancies/$id/applicants': typeof HrVacanciesIdApplicantsRoute
  '/hr/vacancies/$id/update': typeof HrVacanciesIdUpdateRoute
  '/user/vacancy/$id/report': typeof UserVacancyIdReportRoute
  '/hr/vacancies/$id': typeof HrVacanciesIdIndexRoute
  '/user/vacancy/$id': typeof UserVacancyIdIndexRoute
  '/user/vacancy/$id/$id': typeof UserVacancyIdIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/interview/$applicationId': typeof InterviewApplicationIdRoute
  '/auth/': typeof AuthIndexRoute
  '/hr/vacancies/archieve': typeof HrVacanciesArchieveRoute
  '/hr/vacancies/create': typeof HrVacanciesCreateRoute
  '/hr/vacancies/': typeof HrVacanciesIndexRoute
  '/user/profile/': typeof UserProfileIndexRoute
  '/user/vacancies/': typeof UserVacanciesIndexRoute
  '/hr/vacancies/$id/applicants': typeof HrVacanciesIdApplicantsRoute
  '/hr/vacancies/$id/update': typeof HrVacanciesIdUpdateRoute
  '/user/vacancy/$id/report': typeof UserVacancyIdReportRoute
  '/hr/vacancies/$id/': typeof HrVacanciesIdIndexRoute
  '/user/vacancy/$id/': typeof UserVacancyIdIndexRoute
  '/user/vacancy/$id/$id/': typeof UserVacancyIdIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/interview/$applicationId'
    | '/auth'
    | '/hr/vacancies/archieve'
    | '/hr/vacancies/create'
    | '/hr/vacancies'
    | '/user/profile'
    | '/user/vacancies'
    | '/hr/vacancies/$id/applicants'
    | '/hr/vacancies/$id/update'
    | '/user/vacancy/$id/report'
    | '/hr/vacancies/$id'
    | '/user/vacancy/$id'
    | '/user/vacancy/$id/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/interview/$applicationId'
    | '/auth'
    | '/hr/vacancies/archieve'
    | '/hr/vacancies/create'
    | '/hr/vacancies'
    | '/user/profile'
    | '/user/vacancies'
    | '/hr/vacancies/$id/applicants'
    | '/hr/vacancies/$id/update'
    | '/user/vacancy/$id/report'
    | '/hr/vacancies/$id'
    | '/user/vacancy/$id'
    | '/user/vacancy/$id/$id'
  id:
    | '__root__'
    | '/'
    | '/interview/$applicationId'
    | '/auth/'
    | '/hr/vacancies/archieve'
    | '/hr/vacancies/create'
    | '/hr/vacancies/'
    | '/user/profile/'
    | '/user/vacancies/'
    | '/hr/vacancies/$id/applicants'
    | '/hr/vacancies/$id/update'
    | '/user/vacancy/$id/report'
    | '/hr/vacancies/$id/'
    | '/user/vacancy/$id/'
    | '/user/vacancy/$id/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  InterviewApplicationIdRoute: typeof InterviewApplicationIdRoute
  AuthIndexRoute: typeof AuthIndexRoute
  HrVacanciesArchieveRoute: typeof HrVacanciesArchieveRoute
  HrVacanciesCreateRoute: typeof HrVacanciesCreateRoute
  HrVacanciesIndexRoute: typeof HrVacanciesIndexRoute
  UserProfileIndexRoute: typeof UserProfileIndexRoute
  UserVacanciesIndexRoute: typeof UserVacanciesIndexRoute
  HrVacanciesIdApplicantsRoute: typeof HrVacanciesIdApplicantsRoute
  HrVacanciesIdUpdateRoute: typeof HrVacanciesIdUpdateRoute
  UserVacancyIdReportRoute: typeof UserVacancyIdReportRoute
  HrVacanciesIdIndexRoute: typeof HrVacanciesIdIndexRoute
  UserVacancyIdIndexRoute: typeof UserVacancyIdIndexRoute
  UserVacancyIdIdIndexRoute: typeof UserVacancyIdIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/interview/$applicationId': {
      id: '/interview/$applicationId'
      path: '/interview/$applicationId'
      fullPath: '/interview/$applicationId'
      preLoaderRoute: typeof InterviewApplicationIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/vacancies/': {
      id: '/user/vacancies/'
      path: '/user/vacancies'
      fullPath: '/user/vacancies'
      preLoaderRoute: typeof UserVacanciesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/profile/': {
      id: '/user/profile/'
      path: '/user/profile'
      fullPath: '/user/profile'
      preLoaderRoute: typeof UserProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hr/vacancies/': {
      id: '/hr/vacancies/'
      path: '/hr/vacancies'
      fullPath: '/hr/vacancies'
      preLoaderRoute: typeof HrVacanciesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hr/vacancies/create': {
      id: '/hr/vacancies/create'
      path: '/hr/vacancies/create'
      fullPath: '/hr/vacancies/create'
      preLoaderRoute: typeof HrVacanciesCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hr/vacancies/archieve': {
      id: '/hr/vacancies/archieve'
      path: '/hr/vacancies/archieve'
      fullPath: '/hr/vacancies/archieve'
      preLoaderRoute: typeof HrVacanciesArchieveRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/vacancy/$id/': {
      id: '/user/vacancy/$id/'
      path: '/user/vacancy/$id'
      fullPath: '/user/vacancy/$id'
      preLoaderRoute: typeof UserVacancyIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hr/vacancies/$id/': {
      id: '/hr/vacancies/$id/'
      path: '/hr/vacancies/$id'
      fullPath: '/hr/vacancies/$id'
      preLoaderRoute: typeof HrVacanciesIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/vacancy/$id/report': {
      id: '/user/vacancy/$id/report'
      path: '/user/vacancy/$id/report'
      fullPath: '/user/vacancy/$id/report'
      preLoaderRoute: typeof UserVacancyIdReportRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hr/vacancies/$id/update': {
      id: '/hr/vacancies/$id/update'
      path: '/hr/vacancies/$id/update'
      fullPath: '/hr/vacancies/$id/update'
      preLoaderRoute: typeof HrVacanciesIdUpdateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hr/vacancies/$id/applicants': {
      id: '/hr/vacancies/$id/applicants'
      path: '/hr/vacancies/$id/applicants'
      fullPath: '/hr/vacancies/$id/applicants'
      preLoaderRoute: typeof HrVacanciesIdApplicantsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/vacancy/$id/$id/': {
      id: '/user/vacancy/$id/$id/'
      path: '/user/vacancy/$id/$id'
      fullPath: '/user/vacancy/$id/$id'
      preLoaderRoute: typeof UserVacancyIdIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  InterviewApplicationIdRoute: InterviewApplicationIdRoute,
  AuthIndexRoute: AuthIndexRoute,
  HrVacanciesArchieveRoute: HrVacanciesArchieveRoute,
  HrVacanciesCreateRoute: HrVacanciesCreateRoute,
  HrVacanciesIndexRoute: HrVacanciesIndexRoute,
  UserProfileIndexRoute: UserProfileIndexRoute,
  UserVacanciesIndexRoute: UserVacanciesIndexRoute,
  HrVacanciesIdApplicantsRoute: HrVacanciesIdApplicantsRoute,
  HrVacanciesIdUpdateRoute: HrVacanciesIdUpdateRoute,
  UserVacancyIdReportRoute: UserVacancyIdReportRoute,
  HrVacanciesIdIndexRoute: HrVacanciesIdIndexRoute,
  UserVacancyIdIndexRoute: UserVacancyIdIndexRoute,
  UserVacancyIdIdIndexRoute: UserVacancyIdIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
